<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
					 http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
					 http://www.springframework.org/schema/context
					 http://www.springframework.org/schema/context/spring-context-3.0.xsd
					 http://www.springframework.org/schema/aop
					 http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
					 http://www.springframework.org/schema/tx 
					 http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<!-- 相关数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${dataSource.driverClassName}">
		</property>
		<property name="url" value="${dataSource.url}"></property>
		<property name="username" value="${datasource.username}"></property>
		<property name="password" value="${dataSource.password}"></property>
		<!-- 初始化连接 -->
		<property name="initialSize" value="${dataSource.initialSize}"></property>
		<!-- 最大连接数量 -->
		<property name="maxActive" value="${dataSource.maxActive}"></property>
		<!-- 最大空闲连接 -->
		<property name="maxIdle" value="${dataSource.maxIdle}"></property>
		<!-- 最小空闲连接 -->
		<property name="minIdle" value="${dataSource.minIdle}"></property>
		<!-- 超时等待时间以毫秒为单位 6000毫秒/1000等于6秒 -->
		<property name="maxWait" value="${dataSource.maxWait}"></property>
		<!-- 是否自动回收超时连接 -->
		<property name="removeAbandoned" value="true"></property>
		<!-- 超时时间(以秒数为单位) -->
		<property name="removeAbandonedTimeout" value="180"></property>
		<!-- 是否在自动回收超时连接的时候打印连接的超时错误 -->
		<property name="logAbandoned" value="true"></property>
		<property name="validationQuery" value="select 1 from dual"></property>
		<property name="testOnBorrow" value="true"></property>
		<property name="testOnReturn" value="true"></property>
		<property name="testWhileIdle" value="true"></property>
	</bean>

	<!-- 相关数据源 -->
	<bean id="zeusDataSource" class="org.apache.commons.dbcp.BasicDataSource"
		  destroy-method="close">
		<property name="driverClassName" value="${dataSource.driverClassName}">
		</property>
		<property name="url" value="${dataSource.zeus.url}"></property>
		<property name="username" value="${datasource.zeus.username}"></property>
		<property name="password" value="${dataSource.zeus.password}"></property>
		<!-- 初始化连接 -->
		<property name="initialSize" value="${dataSource.initialSize}"></property>
		<!-- 最大连接数量 -->
		<property name="maxActive" value="${dataSource.maxActive}"></property>
		<!-- 最大空闲连接 -->
		<property name="maxIdle" value="${dataSource.maxIdle}"></property>
		<!-- 最小空闲连接 -->
		<property name="minIdle" value="${dataSource.minIdle}"></property>
		<!-- 超时等待时间以毫秒为单位 6000毫秒/1000等于6秒 -->
		<property name="maxWait" value="${dataSource.maxWait}"></property>
		<!-- 是否自动回收超时连接 -->
		<property name="removeAbandoned" value="true"></property>
		<!-- 超时时间(以秒数为单位) -->
		<property name="removeAbandonedTimeout" value="180"></property>
		<!-- 是否在自动回收超时连接的时候打印连接的超时错误 -->
		<property name="logAbandoned" value="true"></property>
		<property name="validationQuery" value="select 1 from dual"></property>
		<property name="testOnBorrow" value="true"></property>
		<property name="testOnReturn" value="true"></property>
		<property name="testWhileIdle" value="true"></property>
	</bean>


	<bean id="multipleDataSource" class="com.bi.dds.system.MultipleDataSource">
		<property name="defaultTargetDataSource" ref="dataSource"/>
		<property name="targetDataSources">
			<map>
				<entry key="dataSource" value-ref="dataSource"/>
				<entry key="zeusDataSource" value-ref="zeusDataSource"/>
			</map>
		</property>
	</bean>

	<!-- scan for mappers and let them be autowired -->
	<!-- <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"> <property 
		name="basePackage" value="com.jointown.zy.common.dao.uc.interfaces" /> </bean> -->

	<!-- define the SqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="multipleDataSource" />
		<property name="mapperLocations"
			value="classpath*:persistence/*.xml" />
	</bean>

	<!-- define the SqlSessionTemplate -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>


	<bean name="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.bi.dds.mapper" />
		
	</bean>
	
	<!-- transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- AOP based transaction management -->
    <aop:config>
        <aop:pointcut id="ddsServiceMethod" expression="execution(* com.bi.dds.service.impl.*.*(..))"/>
        <aop:advisor pointcut-ref="ddsServiceMethod" advice-ref="txAdvice"/>
    </aop:config>

    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="add*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="create*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="save*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="update*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="delete*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="remove*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="*" propagation="SUPPORTS"/>
        </tx:attributes>
    </tx:advice>

</beans>